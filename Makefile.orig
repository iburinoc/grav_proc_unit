ALL_SOURCES=$(shell find src/ -type f -name '*.cpp')
SOURCES=$(filter-out src/main.cpp, $(wildcard src/*.cpp))
OBJECTS=$(patsubst src/%.cpp, bin/obj/%.o, $(SOURCES))
MAIN_SOURCE=src/main.cpp

TEST_SOURCES=$(wildcard test/*.cpp)

LIB=-Iinc/ $(EXTRALIB)

FLAGS=-g -O3 -std=c++11 -Wno-deprecated-declarations
LFLAGS= -L/usr/local/lib -lboost_system -lboost_system-mt

UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
	LFLAGS+= -L/usr/X11R6/lib -lGLEW -lGLU -lGL -lglut
	FLAGS+=LFLAGS
endif
ifeq ($(UNAME_S),Darwin)
	LFLAGS+= -framework OpenGL -framework GLUT
endif

.PHONY: all gpu $(patsubst test/%.cpp, test_%, %(TEST_SOURCES)) print

all: main

print:
	echo $(OBJECTS)

test_%: test/%.cpp bin $(OBJECTS)
	g++ -o bin/$@ $< $(OBJECTS) $(LIB) $(FLAGS) $(LFLAGS) -flto

gpu: bin $(OBJECTS)
	g++ -o $@ $(OBJECTS) $(LIB) $(FLAGS) $(LFLAGS) -flto

bin/obj/%.o: src/%.cpp
	g++ -c $< -o $@ $(FLAGS) $(LIB)

bin:
	@mkdir bin
	@mkdir bin/obj

clean:
	rm -rf bin/

